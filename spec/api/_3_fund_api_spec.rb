=begin
#Tango Card RaaS API

#<p>Welcome to the RaaS&reg; API â€“ with this RESTful API you can integrate a global reward or incentive program into your app or platform.<br /><br /> This console works in our Sandbox environment. To receive your own credentials or to ask questions, please contact us <a href=\"mailto:devsupport@tangocard.com\">devsupport@tangocard.com</a>. <input type=\"hidden\" id=\"platformNameHolder\" value=\"QAPlatform2\" /><input type=\"hidden\" id=\"platformKeyHolder\" value=\"apYPfT6HNONpDRUj3CLGWYt7gvIHONpDRUYPfT6Hj\" /></p>

OpenAPI spec version: 2

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::3FundApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe '3FundApi' do
  before do
    # run before each test
    @instance = SwaggerClient::3FundApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of 3FundApi' do
    it 'should create an instance of 3FundApi' do
      expect(@instance).to be_instance_of(SwaggerClient::3FundApi)
    end
  end

  # unit tests for create_credit_card
  # Register a new Credit Card.
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [CreateCreditCardCriteria] :credit_card_criteria &lt;strong&gt;customerIdentifier&lt;/strong&gt; - specify the customer associated with the credit card. Must be the customer the accountIdentifier is associated with.&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;accountIdentifier&lt;/strong&gt; - specify the account this credit card is associated with&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;label&lt;/strong&gt; - specify a label for the credit card&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;ipAddress&lt;/strong&gt; - specify the The IP address of the person adding the credit card&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;creditCard - number&lt;/strong&gt; - specify the account this order will be deducted from&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;creditCard - expiration&lt;/strong&gt; - specify the card expiration date in YYYY-MM format&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;creditCard - verificationNumber&lt;/strong&gt; - specify the 3 or 4-digit card security code on back of card (CVV2, CVC2, or CID)&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;billingAddress - firstName&lt;/strong&gt; - specify the billing address first name&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;billingAddress - lastName&lt;/strong&gt; - specify the billing address last name&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;billingAddress - addressLine1&lt;/strong&gt; - specify the billing address line 1&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;billingAddress - addressLine2&lt;/strong&gt; - Optional. Specify the billing address line 2&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;billingAddress - city&lt;/strong&gt; - specify the billing address city&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;billingAddress - state&lt;/strong&gt; - specify the billing address state&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;billingAddress - postalCode&lt;/strong&gt; - specify the billing address postal code&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;billingAddress - country&lt;/strong&gt; - specify the billing address 2-letter country code&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;billingAddress - emailAddress&lt;/strong&gt; - specify the billing address email&lt;br/&gt;&lt;br/&gt; 
  # @return [CreditCardView]
  describe 'create_credit_card test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_credit_card_deposit
  # Fund an Account.
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [CreateCreditCardDepositCriteria] :criteria &lt;strong&gt;customerIdentifier&lt;/strong&gt; - specify the customer associated with the credit card. Must be the customer the accountIdentifier is associated with.&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;accountIdentifier&lt;/strong&gt; - specify the account this credit card is associated with&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;creditCardToken&lt;/strong&gt; - specify the credit card token to fund with&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;amount&lt;/strong&gt; - specify the amount to fund in USD&lt;br/&gt;&lt;br/&gt; 
  # @return [CreditCardDepositView]
  describe 'create_credit_card_deposit test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_credit_card_unregister
  # Unregister a Credit Card.
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [CreateCreditCardUnregisterCriteria] :criteria &lt;strong&gt;customerIdentifier&lt;/strong&gt; - specify the customer associated with the credit card. Must be the customer the accountIdentifier is associated with.&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;accountIdentifier&lt;/strong&gt; - specify the account this credit card is associated with&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;creditCardToken&lt;/strong&gt; - specify the credit card token to unregister&lt;br/&gt;&lt;br/&gt; 
  # @return [CreditCardUnregisterView]
  describe 'create_credit_card_unregister test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_credit_card
  # Get details for a specific Credit Card.
  # 
  # @param token Credit card token
  # @param [Hash] opts the optional parameters
  # @return [CreditCardView]
  describe 'get_credit_card test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_credit_card_deposit
  # Get details for a specific Credit Card Deposit.
  # 
  # @param deposit_id Credit card deposit identifier returned in Deposit response payload
  # @param [Hash] opts the optional parameters
  # @return [CreditCardDepositView]
  describe 'get_credit_card_deposit test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_credit_cards
  # List all credit cards registered on this Platform.
  # 
  # @param [Hash] opts the optional parameters
  # @return [CreditCardView]
  describe 'list_credit_cards test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
