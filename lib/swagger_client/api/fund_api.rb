=begin
#Tango Card RaaS API

#<p>Welcome to the RaaS&reg; API â€“ with this RESTful API you can integrate a global reward or incentive program into your app or platform.<br /><br /> This console works in our Sandbox environment. To receive your own credentials or to ask questions, please contact us <a href=\"mailto:devsupport@tangocard.com\">devsupport@tangocard.com</a>. <input type=\"hidden\" id=\"platformNameHolder\" value=\"QAPlatform2\" /><input type=\"hidden\" id=\"platformKeyHolder\" value=\"apYPfT6HNONpDRUj3CLGWYt7gvIHONpDRUYPfT6Hj\" /></p>

OpenAPI spec version: 2

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3

=end

require "uri"

module SwaggerClient
  class FundApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Register a new Credit Card.
    # 
    # @param [Hash] opts the optional parameters
    # @option opts [CreateCreditCardCriteria] :credit_card_criteria &lt;strong&gt;customerIdentifier&lt;/strong&gt; - specify the customer associated with the credit card. Must be the customer the accountIdentifier is associated with.&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;accountIdentifier&lt;/strong&gt; - specify the account this credit card is associated with&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;label&lt;/strong&gt; - specify a label for the credit card&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;ipAddress&lt;/strong&gt; - specify the The IP address of the person adding the credit card&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;creditCard - number&lt;/strong&gt; - specify the account this order will be deducted from&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;creditCard - expiration&lt;/strong&gt; - specify the card expiration date in YYYY-MM format&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;creditCard - verificationNumber&lt;/strong&gt; - specify the 3 or 4-digit card security code on back of card (CVV2, CVC2, or CID)&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;billingAddress - firstName&lt;/strong&gt; - specify the billing address first name&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;billingAddress - lastName&lt;/strong&gt; - specify the billing address last name&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;billingAddress - addressLine1&lt;/strong&gt; - specify the billing address line 1&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;billingAddress - addressLine2&lt;/strong&gt; - Optional. Specify the billing address line 2&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;billingAddress - city&lt;/strong&gt; - specify the billing address city&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;billingAddress - state&lt;/strong&gt; - specify the billing address state&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;billingAddress - postalCode&lt;/strong&gt; - specify the billing address postal code&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;billingAddress - country&lt;/strong&gt; - specify the billing address 2-letter country code&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;billingAddress - emailAddress&lt;/strong&gt; - specify the billing address email&lt;br/&gt;&lt;br/&gt; 
    # @return [CreditCardView]
    def create_credit_card(opts = {})
      data, _status_code, _headers = create_credit_card_with_http_info(opts)
      return data
    end

    # Register a new Credit Card.
    # 
    # @param [Hash] opts the optional parameters
    # @option opts [CreateCreditCardCriteria] :credit_card_criteria &lt;strong&gt;customerIdentifier&lt;/strong&gt; - specify the customer associated with the credit card. Must be the customer the accountIdentifier is associated with.&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;accountIdentifier&lt;/strong&gt; - specify the account this credit card is associated with&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;label&lt;/strong&gt; - specify a label for the credit card&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;ipAddress&lt;/strong&gt; - specify the The IP address of the person adding the credit card&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;creditCard - number&lt;/strong&gt; - specify the account this order will be deducted from&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;creditCard - expiration&lt;/strong&gt; - specify the card expiration date in YYYY-MM format&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;creditCard - verificationNumber&lt;/strong&gt; - specify the 3 or 4-digit card security code on back of card (CVV2, CVC2, or CID)&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;billingAddress - firstName&lt;/strong&gt; - specify the billing address first name&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;billingAddress - lastName&lt;/strong&gt; - specify the billing address last name&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;billingAddress - addressLine1&lt;/strong&gt; - specify the billing address line 1&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;billingAddress - addressLine2&lt;/strong&gt; - Optional. Specify the billing address line 2&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;billingAddress - city&lt;/strong&gt; - specify the billing address city&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;billingAddress - state&lt;/strong&gt; - specify the billing address state&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;billingAddress - postalCode&lt;/strong&gt; - specify the billing address postal code&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;billingAddress - country&lt;/strong&gt; - specify the billing address 2-letter country code&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;billingAddress - emailAddress&lt;/strong&gt; - specify the billing address email&lt;br/&gt;&lt;br/&gt; 
    # @return [Array<(CreditCardView, Fixnum, Hash)>] CreditCardView data, response status code and response headers
    def create_credit_card_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: FundApi.create_credit_card ..."
      end
      # resource path
      local_var_path = "/raas/v2/creditCards"

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'credit_card_criteria'])
      auth_names = ['basicAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'CreditCardView')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: FundApi#create_credit_card\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Fund an Account.
    # 
    # @param [Hash] opts the optional parameters
    # @option opts [CreateCreditCardDepositCriteria] :criteria &lt;strong&gt;customerIdentifier&lt;/strong&gt; - specify the customer associated with the credit card. Must be the customer the accountIdentifier is associated with.&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;accountIdentifier&lt;/strong&gt; - specify the account this credit card is associated with&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;creditCardToken&lt;/strong&gt; - specify the credit card token to fund with&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;amount&lt;/strong&gt; - specify the amount to fund in USD&lt;br/&gt;&lt;br/&gt; 
    # @return [CreditCardDepositView]
    def create_credit_card_deposit(opts = {})
      data, _status_code, _headers = create_credit_card_deposit_with_http_info(opts)
      return data
    end

    # Fund an Account.
    # 
    # @param [Hash] opts the optional parameters
    # @option opts [CreateCreditCardDepositCriteria] :criteria &lt;strong&gt;customerIdentifier&lt;/strong&gt; - specify the customer associated with the credit card. Must be the customer the accountIdentifier is associated with.&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;accountIdentifier&lt;/strong&gt; - specify the account this credit card is associated with&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;creditCardToken&lt;/strong&gt; - specify the credit card token to fund with&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;amount&lt;/strong&gt; - specify the amount to fund in USD&lt;br/&gt;&lt;br/&gt; 
    # @return [Array<(CreditCardDepositView, Fixnum, Hash)>] CreditCardDepositView data, response status code and response headers
    def create_credit_card_deposit_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: FundApi.create_credit_card_deposit ..."
      end
      # resource path
      local_var_path = "/raas/v2/creditCardDeposits"

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'criteria'])
      auth_names = ['basicAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'CreditCardDepositView')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: FundApi#create_credit_card_deposit\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Unregister a Credit Card.
    # 
    # @param [Hash] opts the optional parameters
    # @option opts [CreateCreditCardUnregisterCriteria] :criteria &lt;strong&gt;customerIdentifier&lt;/strong&gt; - specify the customer associated with the credit card. Must be the customer the accountIdentifier is associated with.&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;accountIdentifier&lt;/strong&gt; - specify the account this credit card is associated with&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;creditCardToken&lt;/strong&gt; - specify the credit card token to unregister&lt;br/&gt;&lt;br/&gt; 
    # @return [CreditCardUnregisterView]
    def create_credit_card_unregister(opts = {})
      data, _status_code, _headers = create_credit_card_unregister_with_http_info(opts)
      return data
    end

    # Unregister a Credit Card.
    # 
    # @param [Hash] opts the optional parameters
    # @option opts [CreateCreditCardUnregisterCriteria] :criteria &lt;strong&gt;customerIdentifier&lt;/strong&gt; - specify the customer associated with the credit card. Must be the customer the accountIdentifier is associated with.&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;accountIdentifier&lt;/strong&gt; - specify the account this credit card is associated with&lt;br/&gt;&lt;br/&gt; &lt;strong&gt;creditCardToken&lt;/strong&gt; - specify the credit card token to unregister&lt;br/&gt;&lt;br/&gt; 
    # @return [Array<(CreditCardUnregisterView, Fixnum, Hash)>] CreditCardUnregisterView data, response status code and response headers
    def create_credit_card_unregister_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: FundApi.create_credit_card_unregister ..."
      end
      # resource path
      local_var_path = "/raas/v2/creditCardUnregisters"

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'criteria'])
      auth_names = ['basicAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'CreditCardUnregisterView')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: FundApi#create_credit_card_unregister\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get details for a specific Credit Card.
    # 
    # @param token Credit card token
    # @param [Hash] opts the optional parameters
    # @return [CreditCardView]
    def get_credit_card(token, opts = {})
      data, _status_code, _headers = get_credit_card_with_http_info(token, opts)
      return data
    end

    # Get details for a specific Credit Card.
    # 
    # @param token Credit card token
    # @param [Hash] opts the optional parameters
    # @return [Array<(CreditCardView, Fixnum, Hash)>] CreditCardView data, response status code and response headers
    def get_credit_card_with_http_info(token, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: FundApi.get_credit_card ..."
      end
      # verify the required parameter 'token' is set
      if @api_client.config.client_side_validation && token.nil?
        fail ArgumentError, "Missing the required parameter 'token' when calling FundApi.get_credit_card"
      end
      # resource path
      local_var_path = "/raas/v2/creditCards/{token}".sub('{' + 'token' + '}', token.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['basicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'CreditCardView')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: FundApi#get_credit_card\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get details for a specific Credit Card Deposit.
    # 
    # @param deposit_id Credit card deposit identifier returned in Deposit response payload
    # @param [Hash] opts the optional parameters
    # @return [CreditCardDepositView]
    def get_credit_card_deposit(deposit_id, opts = {})
      data, _status_code, _headers = get_credit_card_deposit_with_http_info(deposit_id, opts)
      return data
    end

    # Get details for a specific Credit Card Deposit.
    # 
    # @param deposit_id Credit card deposit identifier returned in Deposit response payload
    # @param [Hash] opts the optional parameters
    # @return [Array<(CreditCardDepositView, Fixnum, Hash)>] CreditCardDepositView data, response status code and response headers
    def get_credit_card_deposit_with_http_info(deposit_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: FundApi.get_credit_card_deposit ..."
      end
      # verify the required parameter 'deposit_id' is set
      if @api_client.config.client_side_validation && deposit_id.nil?
        fail ArgumentError, "Missing the required parameter 'deposit_id' when calling FundApi.get_credit_card_deposit"
      end
      # resource path
      local_var_path = "/raas/v2/creditCardDeposits/{depositId}".sub('{' + 'depositId' + '}', deposit_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['basicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'CreditCardDepositView')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: FundApi#get_credit_card_deposit\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # List all credit cards registered on this Platform.
    # 
    # @param [Hash] opts the optional parameters
    # @return [CreditCardView]
    def list_credit_cards(opts = {})
      data, _status_code, _headers = list_credit_cards_with_http_info(opts)
      return data
    end

    # List all credit cards registered on this Platform.
    # 
    # @param [Hash] opts the optional parameters
    # @return [Array<(CreditCardView, Fixnum, Hash)>] CreditCardView data, response status code and response headers
    def list_credit_cards_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: FundApi.list_credit_cards ..."
      end
      # resource path
      local_var_path = "/raas/v2/creditCards"

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['basicAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Array<CreditCardView>')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: FundApi#list_credit_cards\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
